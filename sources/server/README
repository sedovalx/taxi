# Инструкция по разворачиванию

## Дано

* Машина с установленной IDE [IntelliJ IDEA Ultimate](https://www.jetbrains.com/idea/download/)
* Установлен [Git](http://git-scm.com/)
* Доступ в интернет

##Предустановки

### Java

* Установить [JDK 1.8](http://www.oracle.com/technetwork/java/javase/downloads/index.html) (Java SE)
* В переменных окружения уровня машины создать переменную JAVA_HOME = <путь к каталогу с установленной jdk, например 
c:\Program Files\Java\jdk1.8.0_31>
* В значение переменной окружения path добавить %java_home%\bin

### PostgreSQL

* Установить [PostgreSql](http://www.enterprisedb.com/products-services-training/pgdownload#windows).
* При установке указать порт 5433
* В качестве пароля для пользователя postgres указать 11111.
* С помощью pgAdmin создать БД с именем taxi

## Работа с серверным проектом

* Открыть в IDE каталог sources\branches\dev\server\. Возможно автоматически запустится процесс индексации проекта (внизу 
у IDE будет надпись Indexing...), лучше дождаться завершения, иначе будет притормаживать.
* Открываем меню View -> Tool Windows -> Terminal. Это обычная командная строка. 
* Чтобы скомпилировать проект нужно выполнить коменду `sbt compile`. Это не запустит проект, только скомпилирует, подтянув
из публичных Internet-репозиториев зависимости проекта.
* Чтобы запустить сревер нужно выполнить команду `sbt run`. При этом также произойдет и компиляция. Север будет доступен 
по адресу http://localhost:9000. По этому адресу открывается дефолтовая страница, потом сделаем, чтобы открывался наш
клиент. Пока клиент будет запускаться отдельно (смотри README.md в каталоге клиента). Однако по этому базовому адресу 
уже есть обрабатываемые сервером маршруты. Напрмер, по адресу http://localhost:9000/cars возвращается список машин, если
они занесены в БД.

## Установка зависимостей

Для установки зависимостей используется файл build.sbt. В разделе `libraryDependencies` указывается зависимость в формате
`группа % имя % версия`. Для поиска правильных имен группы, версии и прочего идем в google, вбиваем 
`maven имя_нужной_библиотеки`. Обычно первой ссылкой идет mvnrepository.com, где мы выбираем нужную версию бибилиотеки
и на закладке SBT видим нужную строку, которую добавляем к `libraryDependencies`. После этого зависимость либо подтянется
сама, если в IDE включен авто-импорт зависимостей, либо делаем это вручную через меню View -> Tool Windows -> SBT, где
нажимаем кнопку Refresh all SBT projects. библиотека автоматически попадет в classpath, и ее можно будет использовать
в коде.
